/*
 * Copyright 2017 Datamountaineer.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

project(":kafka-connect-cassandra-cdc") {
    repositories {
        maven { url "https://datastax.artifactoryonline.com/datastax/public-repos/" }
    }

    ext {
        cassandraDriverVersion = "3.3.0"
        cassandraVersion = "3.10"
        cassandraUnitVersion = "3.1.3.2"
        kcql2 = "2.0.16"

    }
/*
    test {
        //for casssandra unit, add to classpath the cassandra yaml files
        classpath = project.sourceSets.test.runtimeClasspath + files("${projectDir}/src/test/resources")
        //classpath = project.sourceSets.test.runtimeClasspath + files("${projectDir.getCanonicalPath()}/src/test/resources/log4j.properties")
        systemProperty 'truststore', "${projectDir.canonicalPath}/src/test/resources/stc_truststore.jks"
        systemProperty 'keystore', "${projectDir.canonicalPath}/src/test/resources/stc_keystore.jks"
        systemProperty 'log4j.configuration', "file:${projectDir.canonicalPath}/src/test/resources/log4j.properties"
        //dependsOn copyResources
    }*/

    dependencies {
        compile "org.scala-lang:scala-library:$scala"
        compile "com.typesafe.scala-logging:scala-logging-slf4j_$scalaMajorVersion:$scalaLoggingVersion"
        compile("org.apache.cassandra:cassandra-all:$cassandraVersion") {
            exclude group: "org.slf4j", module: "log4j-over-slf4j"
            exclude group: "io.netty"
        }
        compile "com.datastax.dse:dse-java-driver-core:1.2.3"

        compile "org.apache.kafka:connect-json:$kafkaVersion"
        compile "io.confluent:kafka-connect-avro-converter:$confluentVersion"
        compile "io.confluent:kafka-schema-registry:$confluentVersion"
        compile "org.apache.avro:avro:$avroVersion"
        compile("com.datamountaineer:kcql:$kcql2") {
            exclude group: "com.google.guava", module: "guava"
        }
        testCompile "org.mockito:mockito-core:$mockitoVersion"
        testCompile "org.scalacheck:scalacheck_$scalaMajorVersion:$scalaCheck"
        testCompile "org.scalatest:scalatest_$scalaMajorVersion:$scalaTest"
        testCompile "junit:junit:$junit"
        testCompile "org.apache.curator:curator-test:3.1.0"
        testCompile 'org.powermock:powermock-module-junit4:1.6.5'
        testCompile 'org.pegdown:pegdown:1.6.0'

        testCompile("org.cassandraunit:cassandra-unit:$cassandraUnitVersion") {
            exclude group: "org.slf4j", module: "log4j-over-slf4j"
        }
    }

}
